mainmodule tester {
  mainchare Main {
    entry [nokeep] Main(CkArgMsg* m);

    entry void next(void);
    entry void completion(void);

#if USE_SDAG
    entry void run(int size) {
      serial { this->initialize(size); }
      for (rep = 0; rep < (nReps + nSkip); rep += 1) {
        serial {
          this->start = CkWallTimer(); 
          receiver.run(nIters);
          for (auto it = 0; it < nIters; it += 1) {
            receiver.arrival(size, this->data); 
          }
        }
        when completion(void) serial {
          auto end = CkWallTimer();
          auto time = end - start;
          if (rep >= nSkip) {
            this->totalTime += time;
          }
        }
      }
      serial { this->finalize(size); }
    }
#else
    entry [threaded] void run(int size);
#endif
  };

  chare Receiver {
    entry Receiver(void);

    entry void arrival(int size, char arr[size]);

    entry void run(int nMsgs)
#if USE_SDAG
    {
      forall [it] (0:(nMsgs - 1),1) {
        when arrival(int size, char arr[size]) serial {}
      }
      serial { mainProxy.completion(); }
    }
#else
    ;
#endif
  };

  readonly CProxy_Main mainProxy;
};
